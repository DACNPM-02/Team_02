services:
  mysql:
    image: mysql:8
    container_name: rental_mysql
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: rental
      MYSQL_USER: rental_user
      MYSQL_PASSWORD: nhuy0600
      MYSQL_ROOT_PASSWORD: root_password
    volumes:
      - mysql_data:/var/lib/mysql
      - ./rental_db.sql:/docker-entrypoint-initdb.d/rental_db.sql
    networks:
      - elastic
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot_password"]
      interval: 5s
      timeout: 5s
      retries: 5

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.1
    container_name: rental_elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - elastic
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/_cluster/health | grep -q '\"status\":\"green\"' || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 5

  logstash:
    build:
      context: ./logstash
      dockerfile: Dockerfile
    container_name: rental_logstash
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline
    environment:
      - "LS_JAVA_OPTS=-Xms256m -Xmx256m"
    depends_on:
      elasticsearch:
        condition: service_healthy
      mysql:
        condition: service_healthy
    networks:
      - elastic

volumes:
  mysql_data:
  elasticsearch_data:

networks:
  elastic:
    driver: bridge 